name: Build and Test with MongoDB

on:
  push:
    branches:
      - '*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Extract version from branch name
      run: |
        # Get the version from branch name
        VERSION=${GITHUB_REF#refs/heads/}
        echo "Version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build MongoDB Docker image
      run: |
        docker build \
            --build-arg MONGO_VERSION=$VERSION \
        -t mongodb:$VERSION .
    
    - name: Start MongoDB container
      run: |
        docker run -d \
            --name mongodb-container \
            -p 27017:27017 \
            --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 3 \
        mongodb:$VERSION

    - name: Wait for MongoDB to be ready
      run: |
        for i in {1..60}; do
          if docker inspect --format='{{json .State.Health.Status}}' mongodb-container | grep -q '"healthy"'; then
            echo "MongoDB is ready!";
            break;
          fi;
          echo "Waiting for MongoDB...";
          sleep 1;
        done
        if [ $i -eq 30 ]; then
          echo "MongoDB did not become healthy in time";
          exit 1;
        fi

    - name: Run smoke tests
      run: |
        echo "Testing MongoDB connection..."
        docker exec mongodb-container mongosh --eval 'db.runCommand({ ping: 1 })' || exit 1

        echo "Inserting test data..."
        docker exec mongodb-container mongosh --eval 'db.test.insertOne({ name: "test", value: 123 })' || exit 1

        echo "Verifying test data..."
        docker exec mongodb-container mongosh --eval 'const count = db.test.countDocuments({ name: "test" }); if (count !== 1) throw new Error();' || exit 1

        echo "Smoke tests passed!"
    
    - name: Post-run cleanup
      if: always()
      run: |
        echo "Stopping MongoDB container..."
        docker stop mongodb-container || true
        docker rm mongodb-container || true

    - name: Debugging
      run: |
        docker images
        echo "mongodb:$VERSION"

    - name: Scan for All Vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: image
        image-ref: "mongodb:${{ env.VERSION }}"
        scanners: vuln
        format: table

    - name: Block image push if there is severe vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: image
        image-ref: "mongodb:${{ env.VERSION }}"
        scanners: vuln
        format: template
        template: "{{ range . }} {{ .Target }} {{ end }}"
        severity: 'CRITICAL,HIGH'
        hide-progress: true

